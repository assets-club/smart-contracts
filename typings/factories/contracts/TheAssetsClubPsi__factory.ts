/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheAssetsClubPsi,
  TheAssetsClubPsiInterface,
} from "../../contracts/TheAssetsClubPsi";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001fc938038062001fc98339810160408190526200003491620001c0565b604080518082018252600f81526e2a34329020b9b9b2ba399021b63ab160891b60208083019182528351808501909452600384526254414360e81b9084015281518493916200008791600191906200011a565b5080516200009d9060029060208401906200011a565b505050620000ba620000b4620000c460201b60201c565b620000c8565b6080525062000217565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012890620001da565b90600052602060002090601f0160209004810192826200014c576000855562000197565b82601f106200016757805160ff191683800117855562000197565b8280016001018555821562000197579182015b82811115620001975782518255916020019190600101906200017a565b50620001a5929150620001a9565b5090565b5b80821115620001a55760008155600101620001aa565b600060208284031215620001d357600080fd5b5051919050565b600181811c90821680620001ef57607f821691505b602082108114156200021157634e487b7160e01b600052602260045260246000fd5b50919050565b608051611d8f6200023a600039600081816103ac0152610a7b0152611d8f6000f3fe6080604052600436106101355760003560e01c806370a08231116100ab578063a22cb4651161006f578063a22cb4651461033a578063b88d4fde1461035a578063c87b56dd1461037a578063d5abeb011461039a578063e985e9c5146103ce578063f2fde38b1461041757600080fd5b806370a08231146102bf578063715018a6146102df5780638da5cb5b146102f457806395d89b4114610312578063a0712d681461032757600080fd5b806323b872dd116100fd57806323b872dd1461020a5780632f745c591461022a5780633ccfd60b1461024a57806342842e0e1461025f5780634f6ccce71461027f5780636352211e1461029f57600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101c957806318160ddd146101eb575b600080fd5b34801561014657600080fd5b5061015a610155366004611799565b610437565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b506101846104a4565b604051610166919061180e565b34801561019d57600080fd5b506101b16101ac366004611821565b610536565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b506101e96101e4366004611856565b6105c8565b005b3480156101f757600080fd5b506004545b604051908152602001610166565b34801561021657600080fd5b506101e9610225366004611880565b6106e0565b34801561023657600080fd5b506101fc610245366004611856565b610711565b34801561025657600080fd5b506101e96107dc565b34801561026b57600080fd5b506101e961027a366004611880565b61089b565b34801561028b57600080fd5b506101fc61029a366004611821565b6108b6565b3480156102ab57600080fd5b506101b16102ba366004611821565b610971565b3480156102cb57600080fd5b506101fc6102da3660046118bc565b610985565b3480156102eb57600080fd5b506101e9610a56565b34801561030057600080fd5b506007546001600160a01b03166101b1565b34801561031e57600080fd5b50610184610a6a565b6101e9610335366004611821565b610a79565b34801561034657600080fd5b506101e96103553660046118d7565b610b20565b34801561036657600080fd5b506101e9610375366004611929565b610be5565b34801561038657600080fd5b50610184610395366004611821565b610c1d565b3480156103a657600080fd5b506101fc7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103da57600080fd5b5061015a6103e9366004611a05565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b34801561042357600080fd5b506101e96104323660046118bc565b610cf2565b60006001600160e01b031982166380ac58cd60e01b148061046857506001600160e01b03198216635b5e139f60e01b145b8061048357506001600160e01b0319821663780e9d6360e01b145b8061049e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546104b390611a38565b80601f01602080910402602001604051908101604052809291908181526020018280546104df90611a38565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b5050505050905090565b6000610543826004541190565b6105ac5760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a20617070726f76656420717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006105d382610971565b9050806001600160a01b0316836001600160a01b031614156106435760405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a20617070726f76616c20746f2063757272656e74206f6044820152633bb732b960e11b60648201526084016105a3565b336001600160a01b038216148061065f575061065f81336103e9565b6106d15760405162461bcd60e51b815260206004820152603b60248201527f4552433732315073693a20617070726f76652063616c6c6572206973206e6f7460448201527f206f776e6572206e6f7220617070726f76656420666f7220616c6c000000000060648201526084016105a3565b6106db8383610d68565b505050565b6106ea3382610dd6565b6107065760405162461bcd60e51b81526004016105a390611a73565b6106db838383610ec5565b60008060005b6004548110156107875761072c816004541190565b8015610751575061073c81610971565b6001600160a01b0316856001600160a01b0316145b15610775578382141561076757915061049e9050565b8161077181611add565b9250505b8061077f81611add565b915050610717565b5060405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a206f776e657220696e646578206f7574206f6620626f604482015263756e647360e01b60648201526084016105a3565b6107e46110b1565b60006107f86007546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610842576040519150601f19603f3d011682016040523d82523d6000602084013e610847565b606091505b50509050806108985760405162461bcd60e51b815260206004820152601f60248201527f546865417373657473436c75623a207769746864726177206661696c7572650060448201526064016105a3565b50565b6106db83838360405180602001604052806000815250610be5565b60006108c160045490565b821061091d5760405162461bcd60e51b815260206004820152602560248201527f4552433732315073693a20676c6f62616c20696e646578206f7574206f6620626044820152646f756e647360d81b60648201526084016105a3565b6000805b60045481101561096a57610936816004541190565b15610958578382141561094a579392505050565b8161095481611add565b9250505b8061096281611add565b915050610921565b5050919050565b60008061097d8361110b565b509392505050565b60006001600160a01b0382166109f35760405162461bcd60e51b815260206004820152602d60248201527f4552433732315073693a2062616c616e636520717565727920666f722074686560448201526c207a65726f206164647265737360981b60648201526084016105a3565b6000805b600454811015610a4f57610a0c816004541190565b15610a3f57610a1a81610971565b6001600160a01b0316846001600160a01b03161415610a3f57610a3c82611add565b91505b610a4881611add565b90506109f7565b5092915050565b610a5e6110b1565b610a6860006111a4565b565b6060600280546104b390611a38565b7f000000000000000000000000000000000000000000000000000000000000000081610aa460045490565b610aae9190611af8565b1115610b165760405162461bcd60e51b815260206004820152603160248201527f546865417373657473436c75623a206d696e74696e67207175616e746974792060448201527065786365656473206d6178537570706c7960781b60648201526084016105a3565b61089833826111f6565b6001600160a01b038216331415610b795760405162461bcd60e51b815260206004820152601c60248201527f4552433732315073693a20617070726f766520746f2063616c6c65720000000060448201526064016105a3565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610bef3383610dd6565b610c0b5760405162461bcd60e51b81526004016105a390611a73565b610c178484848461135b565b50505050565b6060610c2a826004541190565b610c895760405162461bcd60e51b815260206004820152602a60248201527f4552433732315073693a2055524920717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b60648201526084016105a3565b6000610ca060408051602081019091526000815290565b90506000815111610cc05760405180602001604052806000815250610ceb565b80610cca84611390565b604051602001610cdb929190611b10565b6040516020818303038152906040525b9392505050565b610cfa6110b1565b6001600160a01b038116610d5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a3565b610898816111a4565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d9d82610971565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610de3826004541190565b610e475760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a206f70657261746f7220717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105a3565b6000610e5283610971565b9050806001600160a01b0316846001600160a01b03161480610e8d5750836001600160a01b0316610e8284610536565b6001600160a01b0316145b80610ebd57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b600080610ed18361110b565b91509150846001600160a01b0316826001600160a01b031614610f4b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a207472616e73666572206f6620746f6b656e2074686160448201526b3a1034b9903737ba1037bbb760a11b60648201526084016105a3565b6001600160a01b038416610fb15760405162461bcd60e51b815260206004820152602760248201527f4552433732315073693a207472616e7366657220746f20746865207a65726f206044820152666164647265737360c81b60648201526084016105a3565b610fbc600084610d68565b6000610fc9846001611af8565b600881901c600090815260208190526040902054909150600160ff1b60ff83161c16158015610ff9575060045481105b1561102f57600081815260036020526040812080546001600160a01b0319166001600160a01b03891617905561102f908261148e565b600084815260036020526040902080546001600160a01b0319166001600160a01b0387161790558184146110685761106860008561148e565b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6007546001600160a01b03163314610a685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a3565b600080611119836004541190565b61117a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a206f776e657220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105a3565b611183836114ba565b6000818152600360205260409020546001600160a01b031694909350915050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600454816112545760405162461bcd60e51b815260206004820152602560248201527f4552433732315073693a207175616e74697479206d7573742062652067726561604482015264074657220360dc1b60648201526084016105a3565b6001600160a01b0383166112b65760405162461bcd60e51b815260206004820152602360248201527f4552433732315073693a206d696e7420746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105a3565b81600460008282546112c89190611af8565b9091555050600081815260036020526040812080546001600160a01b0319166001600160a01b0386161790556112fe908261148e565b805b61130a8383611af8565b811015610c175760405181906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48061135381611add565b915050611300565b611366848484610ec5565b6113748484846001856114c6565b610c175760405162461bcd60e51b81526004016105a390611b3f565b6060816113b45750506040805180820190915260018152600360fc1b602082015290565b8160005b81156113de57806113c881611add565b91506113d79050600a83611baa565b91506113b8565b60008167ffffffffffffffff8111156113f9576113f9611913565b6040519080825280601f01601f191660200182016040528015611423576020820181803683370190505b5090505b8415610ebd57611438600183611bbe565b9150611445600a86611bd5565b611450906030611af8565b60f81b81838151811061146557611465611be9565b60200101906001600160f81b031916908160001a905350611487600a86611baa565b9450611427565b600881901c600090815260209290925260409091208054600160ff1b60ff9093169290921c9091179055565b600061049e8183611609565b60006001600160a01b0385163b156115fc57506001835b6114e78486611af8565b8110156115f657604051630a85bd0160e11b81526001600160a01b0387169063150b7a02906115209033908b9086908990600401611bff565b602060405180830381600087803b15801561153a57600080fd5b505af192505050801561156a575060408051601f3d908101601f1916820190925261156791810190611c3c565b60015b6115c4573d808015611598576040519150601f19603f3d011682016040523d82523d6000602084013e61159d565b606091505b5080516115bc5760405162461bcd60e51b81526004016105a390611b3f565b805181602001fd5b8280156115e157506001600160e01b03198116630a85bd0160e11b145b925050806115ee81611add565b9150506114dd565b50611600565b5060015b95945050505050565b600881901c60008181526020849052604081205490919060ff808516919082181c801561164b5761163981611701565b60ff168203600884901b1793506116f8565b600083116116b85760405162461bcd60e51b815260206004820152603460248201527f4269744d6170733a205468652073657420626974206265666f7265207468652060448201527334b73232bc103237b2b9b713ba1032bc34b9ba1760611b60648201526084016105a3565b5060001990910160008181526020869052604090205490919080156116f3576116e081611701565b60ff0360ff16600884901b1793506116f8565b61164b565b50505092915050565b60006040518061012001604052806101008152602001611c5a610100913960f87e818283848586878898a8b8c8d8e8f929395969799a9b9d9e9faaeb6bedeeff61174a8561176b565b02901c8151811061175d5761175d611be9565b016020015160f81c92915050565b600080821161177957600080fd5b5060008190031690565b6001600160e01b03198116811461089857600080fd5b6000602082840312156117ab57600080fd5b8135610ceb81611783565b60005b838110156117d15781810151838201526020016117b9565b83811115610c175750506000910152565b600081518084526117fa8160208601602086016117b6565b601f01601f19169290920160200192915050565b602081526000610ceb60208301846117e2565b60006020828403121561183357600080fd5b5035919050565b80356001600160a01b038116811461185157600080fd5b919050565b6000806040838503121561186957600080fd5b6118728361183a565b946020939093013593505050565b60008060006060848603121561189557600080fd5b61189e8461183a565b92506118ac6020850161183a565b9150604084013590509250925092565b6000602082840312156118ce57600080fd5b610ceb8261183a565b600080604083850312156118ea57600080fd5b6118f38361183a565b91506020830135801515811461190857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561193f57600080fd5b6119488561183a565b93506119566020860161183a565b925060408501359150606085013567ffffffffffffffff8082111561197a57600080fd5b818701915087601f83011261198e57600080fd5b8135818111156119a0576119a0611913565b604051601f8201601f19908116603f011681019083821181831017156119c8576119c8611913565b816040528281528a60208487010111156119e157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611a1857600080fd5b611a218361183a565b9150611a2f6020840161183a565b90509250929050565b600181811c90821680611a4c57607f821691505b60208210811415611a6d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526034908201527f4552433732315073693a207472616e736665722063616c6c6572206973206e6f6040820152731d081bdddb995c881b9bdc88185c1c1c9bdd995960621b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611af157611af1611ac7565b5060010190565b60008219821115611b0b57611b0b611ac7565b500190565b60008351611b228184602088016117b6565b835190830190611b368183602088016117b6565b01949350505050565b60208082526035908201527f4552433732315073693a207472616e7366657220746f206e6f6e20455243373260408201527418a932b1b2b4bb32b91034b6b83632b6b2b73a32b960591b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082611bb957611bb9611b94565b500490565b600082821015611bd057611bd0611ac7565b500390565b600082611be457611be4611b94565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c32908301846117e2565b9695505050505050565b600060208284031215611c4e57600080fd5b8151610ceb8161178356fe0001020903110a19042112290b311a3905412245134d2a550c5d32651b6d3a7506264262237d468514804e8d2b95569d0d495ea533a966b11c886eb93bc176c9071727374353637324837e9b47af86c7155181ad4fd18ed32c9096db57d59ee30e2e4a6a5f92a6be3498aae067ddb2eb1d5989b56fd7baf33ca0c2ee77e5caf7ff0810182028303840444c545c646c7425617c847f8c949c48a4a8b087b8c0c816365272829aaec650acd0d28fdad4e22d6991bd97dfdcea58b4d6f29fede4f6fe0f1f2f3f4b5b6b607b8b93a3a7b7bf357199c5abcfd9e168bcdee9b3f1ecf5fd1e3e5a7a8aa2b670c4ced8bbe8f0f4fc3d79a1c3cde7effb78cce6facbf9f8a2646970667358221220c1788761e5eaa3d52a9737bc4182d03b79f586a2f787a4ee7cd212039a8014d064736f6c63430008090033";

type TheAssetsClubPsiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheAssetsClubPsiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheAssetsClubPsi__factory extends ContractFactory {
  constructor(...args: TheAssetsClubPsiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheAssetsClubPsi> {
    return super.deploy(
      _maxSupply,
      overrides || {}
    ) as Promise<TheAssetsClubPsi>;
  }
  override getDeployTransaction(
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maxSupply, overrides || {});
  }
  override attach(address: string): TheAssetsClubPsi {
    return super.attach(address) as TheAssetsClubPsi;
  }
  override connect(signer: Signer): TheAssetsClubPsi__factory {
    return super.connect(signer) as TheAssetsClubPsi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheAssetsClubPsiInterface {
    return new utils.Interface(_abi) as TheAssetsClubPsiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheAssetsClubPsi {
    return new Contract(address, _abi, signerOrProvider) as TheAssetsClubPsi;
  }
}
