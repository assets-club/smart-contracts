/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheAssetsClubPsi,
  TheAssetsClubPsiInterface,
} from "../../contracts/TheAssetsClubPsi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600f81526e2a34329020b9b9b2ba399021b63ab160891b60208083019182528351808501909452600384526254414360e81b9084015281519192916200006491600191620000f3565b5080516200007a906002906020840190620000f3565b50505062000097620000916200009d60201b60201c565b620000a1565b620001d6565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b611d7880620001e66000396000f3fe6080604052600436106101355760003560e01c80636352211e116100ab578063a0712d681161006f578063a0712d681461033d578063a22cb46514610350578063b88d4fde14610370578063c87b56dd14610390578063e985e9c5146103b0578063f2fde38b146103f957600080fd5b80636352211e146102b557806370a08231146102d5578063715018a6146102f55780638da5cb5b1461030a57806395d89b411461032857600080fd5b806323b872dd116100fd57806323b872dd1461020a5780632f745c591461022a57806332cb6b0c1461024a5780633ccfd60b1461026057806342842e0e146102755780634f6ccce71461029557600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101c957806318160ddd146101eb575b600080fd5b34801561014657600080fd5b5061015a610155366004611782565b610419565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610486565b60405161016691906117f7565b34801561019d57600080fd5b506101b16101ac36600461180a565b610518565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b506101e96101e436600461183f565b6105aa565b005b3480156101f757600080fd5b506004545b604051908152602001610166565b34801561021657600080fd5b506101e9610225366004611869565b6106c2565b34801561023657600080fd5b506101fc61024536600461183f565b6106f3565b34801561025657600080fd5b506101fc61271081565b34801561026c57600080fd5b506101e96107be565b34801561028157600080fd5b506101e9610290366004611869565b61087d565b3480156102a157600080fd5b506101fc6102b036600461180a565b610898565b3480156102c157600080fd5b506101b16102d036600461180a565b610953565b3480156102e157600080fd5b506101fc6102f03660046118a5565b610967565b34801561030157600080fd5b506101e9610a38565b34801561031657600080fd5b506007546001600160a01b03166101b1565b34801561033457600080fd5b50610184610a4c565b6101e961034b36600461180a565b610a5b565b34801561035c57600080fd5b506101e961036b3660046118c0565b610ae4565b34801561037c57600080fd5b506101e961038b366004611912565b610ba9565b34801561039c57600080fd5b506101846103ab36600461180a565b610be1565b3480156103bc57600080fd5b5061015a6103cb3660046119ee565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b34801561040557600080fd5b506101e96104143660046118a5565b610cdb565b60006001600160e01b031982166380ac58cd60e01b148061044a57506001600160e01b03198216635b5e139f60e01b145b8061046557506001600160e01b0319821663780e9d6360e01b145b8061048057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461049590611a21565b80601f01602080910402602001604051908101604052809291908181526020018280546104c190611a21565b801561050e5780601f106104e35761010080835404028352916020019161050e565b820191906000526020600020905b8154815290600101906020018083116104f157829003601f168201915b5050505050905090565b6000610525826004541190565b61058e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a20617070726f76656420717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006105b582610953565b9050806001600160a01b0316836001600160a01b031614156106255760405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a20617070726f76616c20746f2063757272656e74206f6044820152633bb732b960e11b6064820152608401610585565b336001600160a01b0382161480610641575061064181336103cb565b6106b35760405162461bcd60e51b815260206004820152603b60248201527f4552433732315073693a20617070726f76652063616c6c6572206973206e6f7460448201527f206f776e6572206e6f7220617070726f76656420666f7220616c6c00000000006064820152608401610585565b6106bd8383610d51565b505050565b6106cc3382610dbf565b6106e85760405162461bcd60e51b815260040161058590611a5c565b6106bd838383610eae565b60008060005b6004548110156107695761070e816004541190565b8015610733575061071e81610953565b6001600160a01b0316856001600160a01b0316145b1561075757838214156107495791506104809050565b8161075381611ac6565b9250505b8061076181611ac6565b9150506106f9565b5060405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a206f776e657220696e646578206f7574206f6620626f604482015263756e647360e01b6064820152608401610585565b6107c661109a565b60006107da6007546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610824576040519150601f19603f3d011682016040523d82523d6000602084013e610829565b606091505b505090508061087a5760405162461bcd60e51b815260206004820152601f60248201527f546865417373657473436c75623a207769746864726177206661696c757265006044820152606401610585565b50565b6106bd83838360405180602001604052806000815250610ba9565b60006108a360045490565b82106108ff5760405162461bcd60e51b815260206004820152602560248201527f4552433732315073693a20676c6f62616c20696e646578206f7574206f6620626044820152646f756e647360d81b6064820152608401610585565b6000805b60045481101561094c57610918816004541190565b1561093a578382141561092c579392505050565b8161093681611ac6565b9250505b8061094481611ac6565b915050610903565b5050919050565b60008061095f836110f4565b509392505050565b60006001600160a01b0382166109d55760405162461bcd60e51b815260206004820152602d60248201527f4552433732315073693a2062616c616e636520717565727920666f722074686560448201526c207a65726f206164647265737360981b6064820152608401610585565b6000805b600454811015610a31576109ee816004541190565b15610a21576109fc81610953565b6001600160a01b0316846001600160a01b03161415610a2157610a1e82611ac6565b91505b610a2a81611ac6565b90506109d9565b5092915050565b610a4061109a565b610a4a600061118d565b565b60606002805461049590611a21565b61271081610a6860045490565b610a729190611ae1565b1115610ada5760405162461bcd60e51b815260206004820152603160248201527f546865417373657473436c75623a206d696e74696e67207175616e746974792060448201527065786365656473206d6178537570706c7960781b6064820152608401610585565b61087a33826111df565b6001600160a01b038216331415610b3d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732315073693a20617070726f766520746f2063616c6c6572000000006044820152606401610585565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610bb33383610dbf565b610bcf5760405162461bcd60e51b815260040161058590611a5c565b610bdb84848484611344565b50505050565b6060610bee826004541190565b610c4d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732315073693a2055524920717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b6064820152608401610585565b6000610c8960408051808201909152601f81527f68747470733a2f2f7468656173736574732e636c75622f6170692f6e66742f00602082015290565b90506000815111610ca95760405180602001604052806000815250610cd4565b80610cb384611379565b604051602001610cc4929190611af9565b6040516020818303038152906040525b9392505050565b610ce361109a565b6001600160a01b038116610d485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610585565b61087a8161118d565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d8682610953565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610dcc826004541190565b610e305760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a206f70657261746f7220717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610585565b6000610e3b83610953565b9050806001600160a01b0316846001600160a01b03161480610e765750836001600160a01b0316610e6b84610518565b6001600160a01b0316145b80610ea657506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b600080610eba836110f4565b91509150846001600160a01b0316826001600160a01b031614610f345760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a207472616e73666572206f6620746f6b656e2074686160448201526b3a1034b9903737ba1037bbb760a11b6064820152608401610585565b6001600160a01b038416610f9a5760405162461bcd60e51b815260206004820152602760248201527f4552433732315073693a207472616e7366657220746f20746865207a65726f206044820152666164647265737360c81b6064820152608401610585565b610fa5600084610d51565b6000610fb2846001611ae1565b600881901c600090815260208190526040902054909150600160ff1b60ff83161c16158015610fe2575060045481105b1561101857600081815260036020526040812080546001600160a01b0319166001600160a01b0389161790556110189082611477565b600084815260036020526040902080546001600160a01b0319166001600160a01b03871617905581841461105157611051600085611477565b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6007546001600160a01b03163314610a4a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610585565b600080611102836004541190565b6111635760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a206f776e657220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610585565b61116c836114a3565b6000818152600360205260409020546001600160a01b031694909350915050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6004548161123d5760405162461bcd60e51b815260206004820152602560248201527f4552433732315073693a207175616e74697479206d7573742062652067726561604482015264074657220360dc1b6064820152608401610585565b6001600160a01b03831661129f5760405162461bcd60e51b815260206004820152602360248201527f4552433732315073693a206d696e7420746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610585565b81600460008282546112b19190611ae1565b9091555050600081815260036020526040812080546001600160a01b0319166001600160a01b0386161790556112e79082611477565b805b6112f38383611ae1565b811015610bdb5760405181906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48061133c81611ac6565b9150506112e9565b61134f848484610eae565b61135d8484846001856114af565b610bdb5760405162461bcd60e51b815260040161058590611b28565b60608161139d5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156113c757806113b181611ac6565b91506113c09050600a83611b93565b91506113a1565b60008167ffffffffffffffff8111156113e2576113e26118fc565b6040519080825280601f01601f19166020018201604052801561140c576020820181803683370190505b5090505b8415610ea657611421600183611ba7565b915061142e600a86611bbe565b611439906030611ae1565b60f81b81838151811061144e5761144e611bd2565b60200101906001600160f81b031916908160001a905350611470600a86611b93565b9450611410565b600881901c600090815260209290925260409091208054600160ff1b60ff9093169290921c9091179055565b600061048081836115f2565b60006001600160a01b0385163b156115e557506001835b6114d08486611ae1565b8110156115df57604051630a85bd0160e11b81526001600160a01b0387169063150b7a02906115099033908b9086908990600401611be8565b602060405180830381600087803b15801561152357600080fd5b505af1925050508015611553575060408051601f3d908101601f1916820190925261155091810190611c25565b60015b6115ad573d808015611581576040519150601f19603f3d011682016040523d82523d6000602084013e611586565b606091505b5080516115a55760405162461bcd60e51b815260040161058590611b28565b805181602001fd5b8280156115ca57506001600160e01b03198116630a85bd0160e11b145b925050806115d781611ac6565b9150506114c6565b506115e9565b5060015b95945050505050565b600881901c60008181526020849052604081205490919060ff808516919082181c801561163457611622816116ea565b60ff168203600884901b1793506116e1565b600083116116a15760405162461bcd60e51b815260206004820152603460248201527f4269744d6170733a205468652073657420626974206265666f7265207468652060448201527334b73232bc103237b2b9b713ba1032bc34b9ba1760611b6064820152608401610585565b5060001990910160008181526020869052604090205490919080156116dc576116c9816116ea565b60ff0360ff16600884901b1793506116e1565b611634565b50505092915050565b60006040518061012001604052806101008152602001611c43610100913960f87e818283848586878898a8b8c8d8e8f929395969799a9b9d9e9faaeb6bedeeff61173385611754565b02901c8151811061174657611746611bd2565b016020015160f81c92915050565b600080821161176257600080fd5b5060008190031690565b6001600160e01b03198116811461087a57600080fd5b60006020828403121561179457600080fd5b8135610cd48161176c565b60005b838110156117ba5781810151838201526020016117a2565b83811115610bdb5750506000910152565b600081518084526117e381602086016020860161179f565b601f01601f19169290920160200192915050565b602081526000610cd460208301846117cb565b60006020828403121561181c57600080fd5b5035919050565b80356001600160a01b038116811461183a57600080fd5b919050565b6000806040838503121561185257600080fd5b61185b83611823565b946020939093013593505050565b60008060006060848603121561187e57600080fd5b61188784611823565b925061189560208501611823565b9150604084013590509250925092565b6000602082840312156118b757600080fd5b610cd482611823565b600080604083850312156118d357600080fd5b6118dc83611823565b9150602083013580151581146118f157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561192857600080fd5b61193185611823565b935061193f60208601611823565b925060408501359150606085013567ffffffffffffffff8082111561196357600080fd5b818701915087601f83011261197757600080fd5b813581811115611989576119896118fc565b604051601f8201601f19908116603f011681019083821181831017156119b1576119b16118fc565b816040528281528a60208487010111156119ca57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611a0157600080fd5b611a0a83611823565b9150611a1860208401611823565b90509250929050565b600181811c90821680611a3557607f821691505b60208210811415611a5657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526034908201527f4552433732315073693a207472616e736665722063616c6c6572206973206e6f6040820152731d081bdddb995c881b9bdc88185c1c1c9bdd995960621b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611ada57611ada611ab0565b5060010190565b60008219821115611af457611af4611ab0565b500190565b60008351611b0b81846020880161179f565b835190830190611b1f81836020880161179f565b01949350505050565b60208082526035908201527f4552433732315073693a207472616e7366657220746f206e6f6e20455243373260408201527418a932b1b2b4bb32b91034b6b83632b6b2b73a32b960591b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082611ba257611ba2611b7d565b500490565b600082821015611bb957611bb9611ab0565b500390565b600082611bcd57611bcd611b7d565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c1b908301846117cb565b9695505050505050565b600060208284031215611c3757600080fd5b8151610cd48161176c56fe0001020903110a19042112290b311a3905412245134d2a550c5d32651b6d3a7506264262237d468514804e8d2b95569d0d495ea533a966b11c886eb93bc176c9071727374353637324837e9b47af86c7155181ad4fd18ed32c9096db57d59ee30e2e4a6a5f92a6be3498aae067ddb2eb1d5989b56fd7baf33ca0c2ee77e5caf7ff0810182028303840444c545c646c7425617c847f8c949c48a4a8b087b8c0c816365272829aaec650acd0d28fdad4e22d6991bd97dfdcea58b4d6f29fede4f6fe0f1f2f3f4b5b6b607b8b93a3a7b7bf357199c5abcfd9e168bcdee9b3f1ecf5fd1e3e5a7a8aa2b670c4ced8bbe8f0f4fc3d79a1c3cde7effb78cce6facbf9f8a264697066735822122087efd8b68447f06721ad25520383b8a13baaabcceb44174d4b8e9205319c347164736f6c63430008090033";

type TheAssetsClubPsiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheAssetsClubPsiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheAssetsClubPsi__factory extends ContractFactory {
  constructor(...args: TheAssetsClubPsiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheAssetsClubPsi> {
    return super.deploy(overrides || {}) as Promise<TheAssetsClubPsi>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TheAssetsClubPsi {
    return super.attach(address) as TheAssetsClubPsi;
  }
  override connect(signer: Signer): TheAssetsClubPsi__factory {
    return super.connect(signer) as TheAssetsClubPsi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheAssetsClubPsiInterface {
    return new utils.Interface(_abi) as TheAssetsClubPsiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheAssetsClubPsi {
    return new Contract(address, _abi, signerOrProvider) as TheAssetsClubPsi;
  }
}
