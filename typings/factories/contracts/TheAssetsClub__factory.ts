/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheAssetsClub,
  TheAssetsClubInterface,
} from "../../contracts/TheAssetsClub";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minETHBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxTACBalance",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_thresholdLimits",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_thresholdQuantities",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTACBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minETHBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quantity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "thresholds",
    outputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x600a805460ff19169055610120604052601f60e08190527f68747470733a2f2f7468656173736574732e636c75622f6170692f6e66742f006101009081526200004c91600b919062000278565b503480156200005a57600080fd5b5060405162001d4138038062001d418339810160408190526200007d91620003d8565b604080518082018252600f81526e2a34329020b9b9b2ba399021b63ab160891b60208083019182528351808501909452600384526254414360e81b908401528151919291620000cf9160029162000278565b508051620000e590600390602084019062000278565b50506000805550620000f73362000226565b8051825114620001735760405162461bcd60e51b815260206004820152603360248201527f546865417373657473436c75623a207468726573686f6c6420706172616d657460448201527f657273206c656e677468206d69736d6174636800000000000000000000000000606482015260840160405180910390fd5b608085905260a084905260c083905260005b82518110156200021a5760096040518060400160405280858481518110620001b157620001b162000461565b60200260200101518152602001848481518110620001d357620001d362000461565b602090810291909101810151909152825460018181018555600094855293829020835160029092020190815591015191015580620002118162000477565b91505062000185565b505050505050620004de565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200028690620004a1565b90600052602060002090601f016020900481019282620002aa5760008555620002f5565b82601f10620002c557805160ff1916838001178555620002f5565b82800160010185558215620002f5579182015b82811115620002f5578251825591602001919060010190620002d8565b506200030392915062000307565b5090565b5b8082111562000303576000815560010162000308565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200034657600080fd5b815160206001600160401b03808311156200036557620003656200031e565b8260051b604051601f19603f830116810181811084821117156200038d576200038d6200031e565b604052938452858101830193838101925087851115620003ac57600080fd5b83870191505b84821015620003cd57815183529183019190830190620003b2565b979650505050505050565b600080600080600060a08688031215620003f157600080fd5b855160208701516040880151606089015192975090955093506001600160401b03808211156200042057600080fd5b6200042e89838a0162000334565b935060808801519150808211156200044557600080fd5b50620004548882890162000334565b9150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200049a57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680620004b657607f821691505b60208210811415620004d857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05161181e620005236000396000818161034c015261082601526000818161051a015261079201526000818161049d01526108b5015261181e6000f3fe60806040526004361061019c5760003560e01c806361e17242116100ec578063b6c226111161008a578063d5abeb0111610064578063d5abeb011461048b578063e985e9c5146104bf578063eb17fa1314610508578063f2fde38b1461053c57600080fd5b8063b6c2261114610416578063b88d4fde1461044b578063c87b56dd1461046b57600080fd5b8063715018a6116100c6578063715018a6146103ae5780638da5cb5b146103c357806395d89b41146103e1578063a22cb465146103f657600080fd5b806361e172421461033a5780636352211e1461036e57806370a082311461038e57600080fd5b806318160ddd1161015957806342842e0e1161013357806342842e0e146102cb57806343d726d6146102eb57806355f804b314610300578063597e1fb51461032057600080fd5b806318160ddd1461027d57806323b872dd146102965780633ccfd60b146102b657600080fd5b806301ffc9a7146101a157806306fdde03146101d6578063081812fc146101f8578063095ea7b3146102305780631249c58b1461025257806317fc45e21461025a575b600080fd5b3480156101ad57600080fd5b506101c16101bc36600461139e565b61055c565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb6105ae565b6040516101cd9190611413565b34801561020457600080fd5b50610218610213366004611426565b610640565b6040516001600160a01b0390911681526020016101cd565b34801561023c57600080fd5b5061025061024b36600461145b565b610684565b005b610250610724565b34801561026657600080fd5b5061026f610961565b6040519081526020016101cd565b34801561028957600080fd5b506001546000540361026f565b3480156102a257600080fd5b506102506102b1366004611485565b610a1b565b3480156102c257600080fd5b50610250610bac565b3480156102d757600080fd5b506102506102e6366004611485565b610c68565b3480156102f757600080fd5b50610250610c88565b34801561030c57600080fd5b5061025061031b36600461154d565b610c9f565b34801561032c57600080fd5b50600a546101c19060ff1681565b34801561034657600080fd5b5061026f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561037a57600080fd5b50610218610389366004611426565b610cbe565b34801561039a57600080fd5b5061026f6103a9366004611596565b610cc9565b3480156103ba57600080fd5b50610250610d18565b3480156103cf57600080fd5b506008546001600160a01b0316610218565b3480156103ed57600080fd5b506101eb610d2c565b34801561040257600080fd5b506102506104113660046115b1565b610d3b565b34801561042257600080fd5b50610436610431366004611426565b610dd1565b604080519283526020830191909152016101cd565b34801561045757600080fd5b506102506104663660046115ed565b610dff565b34801561047757600080fd5b506101eb610486366004611426565b610e49565b34801561049757600080fd5b5061026f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104cb57600080fd5b506101c16104da366004611669565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561051457600080fd5b5061026f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561054857600080fd5b50610250610557366004611596565b610e7a565b60006301ffc9a760e01b6001600160e01b03198316148061058d57506380ac58cd60e01b6001600160e01b03198316145b806105a85750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546105bd9061169c565b80601f01602080910402602001604051908101604052809291908181526020018280546105e99061169c565b80156106365780601f1061060b57610100808354040283529160200191610636565b820191906000526020600020905b81548152906001019060200180831161061957829003601f168201915b5050505050905090565b600061064b82610ef0565b610668576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061068f82610cbe565b9050336001600160a01b038216146106c8576106ab81336104da565b6106c8576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600a5460ff16156107905760405162461bcd60e51b815260206004820152602b60248201527f546865417373657473436c75623a206d696e74696e6720697320636c6f73656460448201526a2028666f7265766572212960a81b60648201526084015b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000333110156108185760405162461bcd60e51b815260206004820152602e60248201527f546865417373657473436c75623a206d696e74696e672072657175697265732060448201526d746f20686f6c642065746865727360901b6064820152608401610787565b6000610822610961565b90507f00000000000000000000000000000000000000000000000000000000000000008161084f33610cc9565b61085991906116ed565b11156108b35760405162461bcd60e51b8152602060048201526024808201527f546865417373657473436c75623a206d6178696d756d206d696e7420726561636044820152636865642160e01b6064820152608401610787565b7f0000000000000000000000000000000000000000000000000000000000000000816108e26001546000540390565b6108ec91906116ed565b11156109545760405162461bcd60e51b815260206004820152603160248201527f546865417373657473436c75623a206d696e74696e67207175616e746974792060448201527065786365656473206d6178537570706c7960781b6064820152608401610787565b61095e3382610f17565b50565b600060018161096f60005490565b905060005b600954811015610a13576009818154811061099157610991611705565b906000526020600020906002020160000154821080156109d45750600981815481106109bf576109bf611705565b90600052602060002090600202016001015483105b15610a0157600981815481106109ec576109ec611705565b90600052602060002090600202016001015492505b80610a0b8161171b565b915050610974565b509092915050565b6000610a268261100e565b9050836001600160a01b0316816001600160a01b031614610a595760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610aa657610a8986336104da565b610aa657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610acd57604051633a954ecd60e21b815260040160405180910390fd5b8015610ad857600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b8316610b635760018401600081815260046020526040902054610b61576000548114610b615760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610bb4611076565b6000610bc86008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610c12576040519150601f19603f3d011682016040523d82523d6000602084013e610c17565b606091505b505090508061095e5760405162461bcd60e51b815260206004820152601f60248201527f546865417373657473436c75623a207769746864726177206661696c757265006044820152606401610787565b610c8383838360405180602001604052806000815250610dff565b505050565b610c90611076565b600a805460ff19166001179055565b610ca7611076565b8051610cba90600b9060208401906112ef565b5050565b60006105a88261100e565b60006001600160a01b038216610cf2576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610d20611076565b610d2a60006110d0565b565b6060600380546105bd9061169c565b6001600160a01b038216331415610d655760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60098181548110610de157600080fd5b60009182526020909120600290910201805460019091015490915082565b610e0a848484610a1b565b6001600160a01b0383163b15610e4357610e2684848484611122565b610e43576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610e548261121a565b604051602001610e649190611736565b6040516020818303038152906040529050919050565b610e82611076565b6001600160a01b038116610ee75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610787565b61095e816110d0565b60008054821080156105a8575050600090815260046020526040902054600160e01b161590565b60005481610f385760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610fe757808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610faf565b508161100557604051622e076360e81b815260040160405180910390fd5b60005550505050565b60008160005481101561105d57600081815260046020526040902054600160e01b811661105b575b80611054575060001901600081815260046020526040902054611036565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b6008546001600160a01b03163314610d2a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610787565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061115790339089908890889060040161175f565b602060405180830381600087803b15801561117157600080fd5b505af19250505080156111a1575060408051601f3d908101601f1916820190925261119e9181019061179c565b60015b6111fc573d8080156111cf576040519150601f19603f3d011682016040523d82523d6000602084013e6111d4565b606091505b5080516111f4576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606061122582610ef0565b61124257604051630a14c4b560e41b815260040160405180910390fd5b600061124c61129e565b905080516000141561126d5760405180602001604052806000815250611054565b80611277846112ad565b6040516020016112889291906117b9565b6040516020818303038152906040529392505050565b6060600b80546105bd9061169c565b604080516080019081905280825b600183039250600a81066030018353600a9004806112d8576112dd565b6112bb565b50819003601f19909101908152919050565b8280546112fb9061169c565b90600052602060002090601f01602090048101928261131d5760008555611363565b82601f1061133657805160ff1916838001178555611363565b82800160010185558215611363579182015b82811115611363578251825591602001919060010190611348565b5061136f929150611373565b5090565b5b8082111561136f5760008155600101611374565b6001600160e01b03198116811461095e57600080fd5b6000602082840312156113b057600080fd5b813561105481611388565b60005b838110156113d65781810151838201526020016113be565b83811115610e435750506000910152565b600081518084526113ff8160208601602086016113bb565b601f01601f19169290920160200192915050565b60208152600061105460208301846113e7565b60006020828403121561143857600080fd5b5035919050565b80356001600160a01b038116811461145657600080fd5b919050565b6000806040838503121561146e57600080fd5b6114778361143f565b946020939093013593505050565b60008060006060848603121561149a57600080fd5b6114a38461143f565b92506114b16020850161143f565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156114f2576114f26114c1565b604051601f8501601f19908116603f0116810190828211818310171561151a5761151a6114c1565b8160405280935085815286868601111561153357600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561155f57600080fd5b813567ffffffffffffffff81111561157657600080fd5b8201601f8101841361158757600080fd5b611212848235602084016114d7565b6000602082840312156115a857600080fd5b6110548261143f565b600080604083850312156115c457600080fd5b6115cd8361143f565b9150602083013580151581146115e257600080fd5b809150509250929050565b6000806000806080858703121561160357600080fd5b61160c8561143f565b935061161a6020860161143f565b925060408501359150606085013567ffffffffffffffff81111561163d57600080fd5b8501601f8101871361164e57600080fd5b61165d878235602084016114d7565b91505092959194509250565b6000806040838503121561167c57600080fd5b6116858361143f565b91506116936020840161143f565b90509250929050565b600181811c908216806116b057607f821691505b602082108114156116d157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611700576117006116d7565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561172f5761172f6116d7565b5060010190565b600082516117488184602087016113bb565b64173539b7b760d91b920191825250600501919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611792908301846113e7565b9695505050505050565b6000602082840312156117ae57600080fd5b815161105481611388565b600083516117cb8184602088016113bb565b8351908301906117df8183602088016113bb565b0194935050505056fea2646970667358221220f113369882deb8af42216126bcae4688e5c79f1981beaf7c6e1273299296f98764736f6c63430008090033";

type TheAssetsClubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheAssetsClubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheAssetsClub__factory extends ContractFactory {
  constructor(...args: TheAssetsClubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxSupply: PromiseOrValue<BigNumberish>,
    _minETHBalance: PromiseOrValue<BigNumberish>,
    _maxTACBalance: PromiseOrValue<BigNumberish>,
    _thresholdLimits: PromiseOrValue<BigNumberish>[],
    _thresholdQuantities: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheAssetsClub> {
    return super.deploy(
      _maxSupply,
      _minETHBalance,
      _maxTACBalance,
      _thresholdLimits,
      _thresholdQuantities,
      overrides || {}
    ) as Promise<TheAssetsClub>;
  }
  override getDeployTransaction(
    _maxSupply: PromiseOrValue<BigNumberish>,
    _minETHBalance: PromiseOrValue<BigNumberish>,
    _maxTACBalance: PromiseOrValue<BigNumberish>,
    _thresholdLimits: PromiseOrValue<BigNumberish>[],
    _thresholdQuantities: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxSupply,
      _minETHBalance,
      _maxTACBalance,
      _thresholdLimits,
      _thresholdQuantities,
      overrides || {}
    );
  }
  override attach(address: string): TheAssetsClub {
    return super.attach(address) as TheAssetsClub;
  }
  override connect(signer: Signer): TheAssetsClub__factory {
    return super.connect(signer) as TheAssetsClub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheAssetsClubInterface {
    return new utils.Interface(_abi) as TheAssetsClubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheAssetsClub {
    return new Contract(address, _abi, signerOrProvider) as TheAssetsClub;
  }
}
