/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheAssetsClubA,
  TheAssetsClubAInterface,
} from "../../contracts/TheAssetsClubA";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001496380380620014968339810160408190526200003491620001b1565b604080518082018252600f81526e2a34329020b9b9b2ba399021b63ab160891b60208083019182528351808501909452600384526254414360e81b9084015281518493916200008791600291906200010b565b5080516200009d9060039060208401906200010b565b50506000805550620000af33620000b9565b6080525062000208565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011990620001cb565b90600052602060002090601f0160209004810192826200013d576000855562000188565b82601f106200015857805160ff191683800117855562000188565b8280016001018555821562000188579182015b82811115620001885782518255916020019190600101906200016b565b50620001969291506200019a565b5090565b5b808211156200019657600081556001016200019b565b600060208284031215620001c457600080fd5b5051919050565b600181811c90821680620001e057607f821691505b602082108114156200020257634e487b7160e01b600052602260045260246000fd5b50919050565b60805161126b6200022b6000396000818161035a01526108a1015261126b6000f3fe60806040526004361061011f5760003560e01c8063715018a6116100a0578063b88d4fde11610064578063b88d4fde14610308578063c87b56dd14610328578063d5abeb0114610348578063e985e9c51461037c578063f2fde38b146103c557600080fd5b8063715018a61461028d5780638da5cb5b146102a257806395d89b41146102c0578063a0712d68146102d5578063a22cb465146102e857600080fd5b806323b872dd116100e757806323b872dd146101f85780633ccfd60b1461021857806342842e0e1461022d5780636352211e1461024d57806370a082311461026d57600080fd5b806301ffc9a71461012457806306fdde0314610159578063081812fc1461017b578063095ea7b3146101b357806318160ddd146101d5575b600080fd5b34801561013057600080fd5b5061014461013f366004610eac565b6103e5565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061016e610437565b6040516101509190610f21565b34801561018757600080fd5b5061019b610196366004610f34565b6104c9565b6040516001600160a01b039091168152602001610150565b3480156101bf57600080fd5b506101d36101ce366004610f69565b61050d565b005b3480156101e157600080fd5b50600154600054035b604051908152602001610150565b34801561020457600080fd5b506101d3610213366004610f93565b6105ad565b34801561022457600080fd5b506101d361073e565b34801561023957600080fd5b506101d3610248366004610f93565b610802565b34801561025957600080fd5b5061019b610268366004610f34565b610822565b34801561027957600080fd5b506101ea610288366004610fcf565b61082d565b34801561029957600080fd5b506101d361087c565b3480156102ae57600080fd5b506008546001600160a01b031661019b565b3480156102cc57600080fd5b5061016e610890565b6101d36102e3366004610f34565b61089f565b3480156102f457600080fd5b506101d3610303366004610fea565b61094a565b34801561031457600080fd5b506101d361032336600461103c565b6109e0565b34801561033457600080fd5b5061016e610343366004610f34565b610a2a565b34801561035457600080fd5b506101ea7f000000000000000000000000000000000000000000000000000000000000000081565b34801561038857600080fd5b50610144610397366004611118565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156103d157600080fd5b506101d36103e0366004610fcf565b610abc565b60006301ffc9a760e01b6001600160e01b03198316148061041657506380ac58cd60e01b6001600160e01b03198316145b806104315750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546104469061114b565b80601f01602080910402602001604051908101604052809291908181526020018280546104729061114b565b80156104bf5780601f10610494576101008083540402835291602001916104bf565b820191906000526020600020905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b60006104d482610b32565b6104f1576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061051882610822565b9050336001600160a01b03821614610551576105348133610397565b610551576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006105b882610b59565b9050836001600160a01b0316816001600160a01b0316146105eb5760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b038816909114176106385761061b8633610397565b61063857604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661065f57604051633a954ecd60e21b815260040160405180910390fd5b801561066a57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b83166106f557600184016000818152600460205260409020546106f35760005481146106f35760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610746610bba565b600061075a6008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d80600081146107a4576040519150601f19603f3d011682016040523d82523d6000602084013e6107a9565b606091505b50509050806107ff5760405162461bcd60e51b815260206004820152601f60248201527f546865417373657473436c75623a207769746864726177206661696c7572650060448201526064015b60405180910390fd5b50565b61081d838383604051806020016040528060008152506109e0565b505050565b600061043182610b59565b60006001600160a01b038216610856576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610884610bba565b61088e6000610c14565b565b6060600380546104469061114b565b7f0000000000000000000000000000000000000000000000000000000000000000816108ce6001546000540390565b6108d89190611186565b11156109405760405162461bcd60e51b815260206004820152603160248201527f546865417373657473436c75623a206d696e74696e67207175616e746974792060448201527065786365656473206d6178537570706c7960781b60648201526084016107f6565b6107ff3382610c66565b6001600160a01b0382163314156109745760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109eb8484846105ad565b6001600160a01b0383163b15610a2457610a0784848484610d5d565b610a24576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610a3582610b32565b610a5257604051630a14c4b560e41b815260040160405180910390fd5b6000610a6960408051602081019091526000815290565b9050805160001415610a8a5760405180602001604052806000815250610ab5565b80610a9484610e54565b604051602001610aa59291906111ac565b6040516020818303038152906040525b9392505050565b610ac4610bba565b6001600160a01b038116610b295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107f6565b6107ff81610c14565b6000805482108015610431575050600090815260046020526040902054600160e01b161590565b600081600054811015610ba157600081815260046020526040902054600160e01b8116610b9f575b80610ab5575060001901600081815260046020526040902054610b81565b505b604051636f96cda160e11b815260040160405180910390fd5b6008546001600160a01b0316331461088e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107f6565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005481610c875760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610d3657808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610cfe565b5081610d5457604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610d929033908990889088906004016111db565b602060405180830381600087803b158015610dac57600080fd5b505af1925050508015610ddc575060408051601f3d908101601f19168201909252610dd991810190611218565b60015b610e37573d808015610e0a576040519150601f19603f3d011682016040523d82523d6000602084013e610e0f565b606091505b508051610e2f576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080019081905280825b600183039250600a81066030018353600a900480610e7f57610e84565b610e62565b50819003601f19909101908152919050565b6001600160e01b0319811681146107ff57600080fd5b600060208284031215610ebe57600080fd5b8135610ab581610e96565b60005b83811015610ee4578181015183820152602001610ecc565b83811115610a245750506000910152565b60008151808452610f0d816020860160208601610ec9565b601f01601f19169290920160200192915050565b602081526000610ab56020830184610ef5565b600060208284031215610f4657600080fd5b5035919050565b80356001600160a01b0381168114610f6457600080fd5b919050565b60008060408385031215610f7c57600080fd5b610f8583610f4d565b946020939093013593505050565b600080600060608486031215610fa857600080fd5b610fb184610f4d565b9250610fbf60208501610f4d565b9150604084013590509250925092565b600060208284031215610fe157600080fd5b610ab582610f4d565b60008060408385031215610ffd57600080fd5b61100683610f4d565b91506020830135801515811461101b57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561105257600080fd5b61105b85610f4d565b935061106960208601610f4d565b925060408501359150606085013567ffffffffffffffff8082111561108d57600080fd5b818701915087601f8301126110a157600080fd5b8135818111156110b3576110b3611026565b604051601f8201601f19908116603f011681019083821181831017156110db576110db611026565b816040528281528a60208487010111156110f457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561112b57600080fd5b61113483610f4d565b915061114260208401610f4d565b90509250929050565b600181811c9082168061115f57607f821691505b6020821081141561118057634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156111a757634e487b7160e01b600052601160045260246000fd5b500190565b600083516111be818460208801610ec9565b8351908301906111d2818360208801610ec9565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061120e90830184610ef5565b9695505050505050565b60006020828403121561122a57600080fd5b8151610ab581610e9656fea264697066735822122040fc51f4346103a4d071baa978d89ad7899ca90c4ba10e2f299b8e867748ce2d64736f6c63430008090033";

type TheAssetsClubAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheAssetsClubAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheAssetsClubA__factory extends ContractFactory {
  constructor(...args: TheAssetsClubAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheAssetsClubA> {
    return super.deploy(_maxSupply, overrides || {}) as Promise<TheAssetsClubA>;
  }
  override getDeployTransaction(
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maxSupply, overrides || {});
  }
  override attach(address: string): TheAssetsClubA {
    return super.attach(address) as TheAssetsClubA;
  }
  override connect(signer: Signer): TheAssetsClubA__factory {
    return super.connect(signer) as TheAssetsClubA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheAssetsClubAInterface {
    return new utils.Interface(_abi) as TheAssetsClubAInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheAssetsClubA {
    return new Contract(address, _abi, signerOrProvider) as TheAssetsClubA;
  }
}
