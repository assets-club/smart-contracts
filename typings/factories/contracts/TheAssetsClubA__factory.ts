/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheAssetsClubA,
  TheAssetsClubAInterface,
} from "../../contracts/TheAssetsClubA";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600f81526e2a34329020b9b9b2ba399021b63ab160891b60208083019182528351808501909452600384526254414360e81b9084015281519192916200006491600291620000e4565b5080516200007a906003906020840190620000e4565b505060008055506200008c3362000092565b620001c7565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f2906200018a565b90600052602060002090601f01602090048101928262000116576000855562000161565b82601f106200013157805160ff191683800117855562000161565b8280016001018555821562000161579182015b828111156200016157825182559160200191906001019062000144565b506200016f92915062000173565b5090565b5b808211156200016f576000815560010162000174565b600181811c908216806200019f57607f821691505b60208210811415620001c157634e487b7160e01b600052602260045260246000fd5b50919050565b61125480620001d76000396000f3fe60806040526004361061011f5760003560e01c806370a08231116100a0578063a22cb46511610064578063a22cb465146102fe578063b88d4fde1461031e578063c87b56dd1461033e578063e985e9c51461035e578063f2fde38b146103a757600080fd5b806370a0823114610283578063715018a6146102a35780638da5cb5b146102b857806395d89b41146102d6578063a0712d68146102eb57600080fd5b806323b872dd116100e757806323b872dd146101f857806332cb6b0c146102185780633ccfd60b1461022e57806342842e0e146102435780636352211e1461026357600080fd5b806301ffc9a71461012457806306fdde0314610159578063081812fc1461017b578063095ea7b3146101b357806318160ddd146101d5575b600080fd5b34801561013057600080fd5b5061014461013f366004610e95565b6103c7565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061016e610419565b6040516101509190610f0a565b34801561018757600080fd5b5061019b610196366004610f1d565b6104ab565b6040516001600160a01b039091168152602001610150565b3480156101bf57600080fd5b506101d36101ce366004610f52565b6104ef565b005b3480156101e157600080fd5b50600154600054035b604051908152602001610150565b34801561020457600080fd5b506101d3610213366004610f7c565b61058f565b34801561022457600080fd5b506101ea61271081565b34801561023a57600080fd5b506101d3610720565b34801561024f57600080fd5b506101d361025e366004610f7c565b6107e4565b34801561026f57600080fd5b5061019b61027e366004610f1d565b610804565b34801561028f57600080fd5b506101ea61029e366004610fb8565b61080f565b3480156102af57600080fd5b506101d361085e565b3480156102c457600080fd5b506008546001600160a01b031661019b565b3480156102e257600080fd5b5061016e610872565b6101d36102f9366004610f1d565b610881565b34801561030a57600080fd5b506101d3610319366004610fd3565b61090e565b34801561032a57600080fd5b506101d3610339366004611025565b6109a4565b34801561034a57600080fd5b5061016e610359366004610f1d565b6109ee565b34801561036a57600080fd5b50610144610379366004611101565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156103b357600080fd5b506101d36103c2366004610fb8565b610aa5565b60006301ffc9a760e01b6001600160e01b0319831614806103f857506380ac58cd60e01b6001600160e01b03198316145b806104135750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461042890611134565b80601f016020809104026020016040519081016040528092919081815260200182805461045490611134565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b5050505050905090565b60006104b682610b1b565b6104d3576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006104fa82610804565b9050336001600160a01b03821614610533576105168133610379565b610533576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061059a82610b42565b9050836001600160a01b0316816001600160a01b0316146105cd5760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761061a576105fd8633610379565b61061a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661064157604051633a954ecd60e21b815260040160405180910390fd5b801561064c57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b83166106d757600184016000818152600460205260409020546106d55760005481146106d55760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610728610ba3565b600061073c6008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610786576040519150601f19603f3d011682016040523d82523d6000602084013e61078b565b606091505b50509050806107e15760405162461bcd60e51b815260206004820152601f60248201527f546865417373657473436c75623a207769746864726177206661696c7572650060448201526064015b60405180910390fd5b50565b6107ff838383604051806020016040528060008152506109a4565b505050565b600061041382610b42565b60006001600160a01b038216610838576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610866610ba3565b6108706000610bfd565b565b60606003805461042890611134565b612710816108926001546000540390565b61089c919061116f565b11156109045760405162461bcd60e51b815260206004820152603160248201527f546865417373657473436c75623a206d696e74696e67207175616e746974792060448201527065786365656473206d6178537570706c7960781b60648201526084016107d8565b6107e13382610c4f565b6001600160a01b0382163314156109385760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109af84848461058f565b6001600160a01b0383163b156109e8576109cb84848484610d46565b6109e8576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606109f982610b1b565b610a1657604051630a14c4b560e41b815260040160405180910390fd5b6000610a5260408051808201909152601f81527f68747470733a2f2f7468656173736574732e636c75622f6170692f6e66742f00602082015290565b9050805160001415610a735760405180602001604052806000815250610a9e565b80610a7d84610e3d565b604051602001610a8e929190611195565b6040516020818303038152906040525b9392505050565b610aad610ba3565b6001600160a01b038116610b125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107d8565b6107e181610bfd565b6000805482108015610413575050600090815260046020526040902054600160e01b161590565b600081600054811015610b8a57600081815260046020526040902054600160e01b8116610b88575b80610a9e575060001901600081815260046020526040902054610b6a565b505b604051636f96cda160e11b815260040160405180910390fd5b6008546001600160a01b031633146108705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d8565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005481610c705760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610d1f57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610ce7565b5081610d3d57604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610d7b9033908990889088906004016111c4565b602060405180830381600087803b158015610d9557600080fd5b505af1925050508015610dc5575060408051601f3d908101601f19168201909252610dc291810190611201565b60015b610e20573d808015610df3576040519150601f19603f3d011682016040523d82523d6000602084013e610df8565b606091505b508051610e18576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080019081905280825b600183039250600a81066030018353600a900480610e6857610e6d565b610e4b565b50819003601f19909101908152919050565b6001600160e01b0319811681146107e157600080fd5b600060208284031215610ea757600080fd5b8135610a9e81610e7f565b60005b83811015610ecd578181015183820152602001610eb5565b838111156109e85750506000910152565b60008151808452610ef6816020860160208601610eb2565b601f01601f19169290920160200192915050565b602081526000610a9e6020830184610ede565b600060208284031215610f2f57600080fd5b5035919050565b80356001600160a01b0381168114610f4d57600080fd5b919050565b60008060408385031215610f6557600080fd5b610f6e83610f36565b946020939093013593505050565b600080600060608486031215610f9157600080fd5b610f9a84610f36565b9250610fa860208501610f36565b9150604084013590509250925092565b600060208284031215610fca57600080fd5b610a9e82610f36565b60008060408385031215610fe657600080fd5b610fef83610f36565b91506020830135801515811461100457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561103b57600080fd5b61104485610f36565b935061105260208601610f36565b925060408501359150606085013567ffffffffffffffff8082111561107657600080fd5b818701915087601f83011261108a57600080fd5b81358181111561109c5761109c61100f565b604051601f8201601f19908116603f011681019083821181831017156110c4576110c461100f565b816040528281528a60208487010111156110dd57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561111457600080fd5b61111d83610f36565b915061112b60208401610f36565b90509250929050565b600181811c9082168061114857607f821691505b6020821081141561116957634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561119057634e487b7160e01b600052601160045260246000fd5b500190565b600083516111a7818460208801610eb2565b8351908301906111bb818360208801610eb2565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f790830184610ede565b9695505050505050565b60006020828403121561121357600080fd5b8151610a9e81610e7f56fea26469706673582212206bb6145115f7b3ad98bd0094ede291c4313add1fd5a4ff9f6806fd518a0ebd3164736f6c63430008090033";

type TheAssetsClubAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheAssetsClubAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheAssetsClubA__factory extends ContractFactory {
  constructor(...args: TheAssetsClubAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheAssetsClubA> {
    return super.deploy(overrides || {}) as Promise<TheAssetsClubA>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TheAssetsClubA {
    return super.attach(address) as TheAssetsClubA;
  }
  override connect(signer: Signer): TheAssetsClubA__factory {
    return super.connect(signer) as TheAssetsClubA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheAssetsClubAInterface {
    return new utils.Interface(_abi) as TheAssetsClubAInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheAssetsClubA {
    return new Contract(address, _abi, signerOrProvider) as TheAssetsClubA;
  }
}
