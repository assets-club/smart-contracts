/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheAssetsClubOZ,
  TheAssetsClubOZInterface,
} from "../../contracts/TheAssetsClubOZ";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b50604080518082018252600f81526e2a34329020b9b9b2ba399021b63ab160891b60208083019182528351808501909452600384526254414360e81b9084015281519192916200006991600091620000f8565b5080516200007f906001906020840190620000f8565b5050506200009c62000096620000a260201b60201c565b620000a6565b620001db565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000106906200019e565b90600052602060002090601f0160209004810192826200012a576000855562000175565b82601f106200014557805160ff191683800117855562000175565b8280016001018555821562000175579182015b828111156200017557825182559160200191906001019062000158565b506200018392915062000187565b5090565b5b8082111562000183576000815560010162000188565b600181811c90821680620001b357607f821691505b60208210811415620001d557634e487b7160e01b600052602260045260246000fd5b50919050565b61173d80620001eb6000396000f3fe60806040526004361061011f5760003560e01c806370a08231116100a0578063a22cb46511610064578063a22cb465146102fa578063b88d4fde1461031a578063c87b56dd1461033a578063e985e9c51461035a578063f2fde38b146103a357600080fd5b806370a082311461027f578063715018a61461029f5780638da5cb5b146102b457806395d89b41146102d2578063a0712d68146102e757600080fd5b806323b872dd116100e757806323b872dd146101f457806332cb6b0c146102145780633ccfd60b1461022a57806342842e0e1461023f5780636352211e1461025f57600080fd5b806301ffc9a71461012457806306fdde0314610159578063081812fc1461017b578063095ea7b3146101b357806318160ddd146101d5575b600080fd5b34801561013057600080fd5b5061014461013f366004611250565b6103c3565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061016e610415565b60405161015091906112c5565b34801561018757600080fd5b5061019b6101963660046112d8565b6104a7565b6040516001600160a01b039091168152602001610150565b3480156101bf57600080fd5b506101d36101ce36600461130d565b6104ce565b005b3480156101e157600080fd5b506007545b604051908152602001610150565b34801561020057600080fd5b506101d361020f366004611337565b6105e9565b34801561022057600080fd5b506101e661271081565b34801561023657600080fd5b506101d361061a565b34801561024b57600080fd5b506101d361025a366004611337565b6106d9565b34801561026b57600080fd5b5061019b61027a3660046112d8565b6106f4565b34801561028b57600080fd5b506101e661029a366004611373565b610754565b3480156102ab57600080fd5b506101d36107da565b3480156102c057600080fd5b506006546001600160a01b031661019b565b3480156102de57600080fd5b5061016e6107ee565b6101d36102f53660046112d8565b6107fd565b34801561030657600080fd5b506101d361031536600461138e565b6108b4565b34801561032657600080fd5b506101d36103353660046113e0565b6108c3565b34801561034657600080fd5b5061016e6103553660046112d8565b6108fb565b34801561036657600080fd5b506101446103753660046114bc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156103af57600080fd5b506101d36103be366004611373565b610994565b60006001600160e01b031982166380ac58cd60e01b14806103f457506001600160e01b03198216635b5e139f60e01b145b8061040f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610424906114ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610450906114ef565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104b282610a0a565b506000908152600460205260409020546001600160a01b031690565b60006104d9826106f4565b9050806001600160a01b0316836001600160a01b0316141561054c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061056857506105688133610375565b6105da5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610543565b6105e48383610a69565b505050565b6105f33382610ad7565b61060f5760405162461bcd60e51b81526004016105439061152a565b6105e4838383610b56565b610622610cf2565b60006106366006546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610680576040519150601f19603f3d011682016040523d82523d6000602084013e610685565b606091505b50509050806106d65760405162461bcd60e51b815260206004820152601f60248201527f546865417373657473436c75623a207769746864726177206661696c757265006044820152606401610543565b50565b6105e4838383604051806020016040528060008152506108c3565b6000818152600260205260408120546001600160a01b03168061040f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610543565b60006001600160a01b0382166107be5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610543565b506001600160a01b031660009081526003602052604090205490565b6107e2610cf2565b6107ec6000610d4c565b565b606060018054610424906114ef565b600061080860075490565b9050612710610817838361158e565b1061087b5760405162461bcd60e51b815260206004820152602e60248201527f546865417373657473436c75623a206d696e74696e6720636f756e742065786360448201526d65656473206d6178537570706c7960901b6064820152608401610543565b60005b828110156108ad5761089b3383610894816115a6565b9450610d9e565b806108a5816115a6565b91505061087e565b5060075550565b6108bf338383610db8565b5050565b6108cd3383610ad7565b6108e95760405162461bcd60e51b81526004016105439061152a565b6108f584848484610e87565b50505050565b606061090682610a0a565b600061094260408051808201909152601f81527f68747470733a2f2f7468656173736574732e636c75622f6170692f6e66742f00602082015290565b90506000815111610962576040518060200160405280600081525061098d565b8061096c84610eba565b60405160200161097d9291906115c1565b6040516020818303038152906040525b9392505050565b61099c610cf2565b6001600160a01b038116610a015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610543565b6106d681610d4c565b6000818152600260205260409020546001600160a01b03166106d65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610543565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a9e826106f4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ae3836106f4565b9050806001600160a01b0316846001600160a01b03161480610b2a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b4e5750836001600160a01b0316610b43846104a7565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b69826106f4565b6001600160a01b031614610bcd5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610543565b6001600160a01b038216610c2f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610543565b610c3a600082610a69565b6001600160a01b0383166000908152600360205260408120805460019290610c639084906115f0565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c9190849061158e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146107ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610543565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6108bf828260405180602001604052806000815250610fb8565b816001600160a01b0316836001600160a01b03161415610e1a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610543565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e92848484610b56565b610e9e84848484610feb565b6108f55760405162461bcd60e51b815260040161054390611607565b606081610ede5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f085780610ef2816115a6565b9150610f019050600a8361166f565b9150610ee2565b60008167ffffffffffffffff811115610f2357610f236113ca565b6040519080825280601f01601f191660200182016040528015610f4d576020820181803683370190505b5090505b8415610b4e57610f626001836115f0565b9150610f6f600a86611683565b610f7a90603061158e565b60f81b818381518110610f8f57610f8f611697565b60200101906001600160f81b031916908160001a905350610fb1600a8661166f565b9450610f51565b610fc283836110f8565b610fcf6000848484610feb565b6105e45760405162461bcd60e51b815260040161054390611607565b60006001600160a01b0384163b156110ed57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061102f9033908990889088906004016116ad565b602060405180830381600087803b15801561104957600080fd5b505af1925050508015611079575060408051601f3d908101601f19168201909252611076918101906116ea565b60015b6110d3573d8080156110a7576040519150601f19603f3d011682016040523d82523d6000602084013e6110ac565b606091505b5080516110cb5760405162461bcd60e51b815260040161054390611607565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b4e565b506001949350505050565b6001600160a01b03821661114e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610543565b6000818152600260205260409020546001600160a01b0316156111b35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610543565b6001600160a01b03821660009081526003602052604081208054600192906111dc90849061158e565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146106d657600080fd5b60006020828403121561126257600080fd5b813561098d8161123a565b60005b83811015611288578181015183820152602001611270565b838111156108f55750506000910152565b600081518084526112b181602086016020860161126d565b601f01601f19169290920160200192915050565b60208152600061098d6020830184611299565b6000602082840312156112ea57600080fd5b5035919050565b80356001600160a01b038116811461130857600080fd5b919050565b6000806040838503121561132057600080fd5b611329836112f1565b946020939093013593505050565b60008060006060848603121561134c57600080fd5b611355846112f1565b9250611363602085016112f1565b9150604084013590509250925092565b60006020828403121561138557600080fd5b61098d826112f1565b600080604083850312156113a157600080fd5b6113aa836112f1565b9150602083013580151581146113bf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156113f657600080fd5b6113ff856112f1565b935061140d602086016112f1565b925060408501359150606085013567ffffffffffffffff8082111561143157600080fd5b818701915087601f83011261144557600080fd5b813581811115611457576114576113ca565b604051601f8201601f19908116603f0116810190838211818310171561147f5761147f6113ca565b816040528281528a602084870101111561149857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156114cf57600080fd5b6114d8836112f1565b91506114e6602084016112f1565b90509250929050565b600181811c9082168061150357607f821691505b6020821081141561152457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156115a1576115a1611578565b500190565b60006000198214156115ba576115ba611578565b5060010190565b600083516115d381846020880161126d565b8351908301906115e781836020880161126d565b01949350505050565b60008282101561160257611602611578565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60008261167e5761167e611659565b500490565b60008261169257611692611659565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116e090830184611299565b9695505050505050565b6000602082840312156116fc57600080fd5b815161098d8161123a56fea2646970667358221220feb3bcdc1e8592cd37dfb6661944961b78c5f8c071ff0000a680b7a1db80bc4c64736f6c63430008090033";

type TheAssetsClubOZConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheAssetsClubOZConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheAssetsClubOZ__factory extends ContractFactory {
  constructor(...args: TheAssetsClubOZConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheAssetsClubOZ> {
    return super.deploy(overrides || {}) as Promise<TheAssetsClubOZ>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TheAssetsClubOZ {
    return super.attach(address) as TheAssetsClubOZ;
  }
  override connect(signer: Signer): TheAssetsClubOZ__factory {
    return super.connect(signer) as TheAssetsClubOZ__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheAssetsClubOZInterface {
    return new utils.Interface(_abi) as TheAssetsClubOZInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheAssetsClubOZ {
    return new Contract(address, _abi, signerOrProvider) as TheAssetsClubOZ;
  }
}
