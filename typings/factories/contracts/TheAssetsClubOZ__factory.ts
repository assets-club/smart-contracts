/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TheAssetsClubOZ,
  TheAssetsClubOZInterface,
} from "../../contracts/TheAssetsClubOZ";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526127106080523480156200001757600080fd5b50604080518082018252600f81526e2a34329020b9b9b2ba399021b63ab160891b60208083019182528351808501909452600384526254414360e81b9084015281519192916200006a91600091620000f9565b50805162000080906001906020840190620000f9565b5050506200009d62000097620000a360201b60201c565b620000a7565b620001dc565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000107906200019f565b90600052602060002090601f0160209004810192826200012b576000855562000176565b82601f106200014657805160ff191683800117855562000176565b8280016001018555821562000176579182015b828111156200017657825182559160200191906001019062000159565b506200018492915062000188565b5090565b5b8082111562000184576000815560010162000189565b600181811c90821680620001b457607f821691505b60208210811415620001d657634e487b7160e01b600052602260045260246000fd5b50919050565b608051611b99620001ff6000396000818161025c01526109750152611b996000f3fe6080604052600436106101355760003560e01c80636352211e116100ab578063a0712d681161006f578063a0712d681461035b578063a22cb4651461036e578063b88d4fde1461038e578063c87b56dd146103ae578063e985e9c5146103ce578063f2fde38b1461041757600080fd5b80636352211e146102d357806370a08231146102f3578063715018a6146103135780638da5cb5b1461032857806395d89b411461034657600080fd5b806323b872dd116100fd57806323b872dd1461020a5780632f745c591461022a57806332cb6b0c1461024a5780633ccfd60b1461027e57806342842e0e146102935780634f6ccce7146102b357600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101c957806318160ddd146101eb575b600080fd5b34801561014657600080fd5b5061015a610155366004611696565b610437565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610462565b604051610166919061170b565b34801561019d57600080fd5b506101b16101ac36600461171e565b6104f4565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b506101e96101e4366004611753565b61051b565b005b3480156101f757600080fd5b506008545b604051908152602001610166565b34801561021657600080fd5b506101e961022536600461177d565b610636565b34801561023657600080fd5b506101fc610245366004611753565b610667565b34801561025657600080fd5b506101fc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561028a57600080fd5b506101e96106fd565b34801561029f57600080fd5b506101e96102ae36600461177d565b6107bc565b3480156102bf57600080fd5b506101fc6102ce36600461171e565b6107d7565b3480156102df57600080fd5b506101b16102ee36600461171e565b61086a565b3480156102ff57600080fd5b506101fc61030e3660046117b9565b6108ca565b34801561031f57600080fd5b506101e9610950565b34801561033457600080fd5b50600a546001600160a01b03166101b1565b34801561035257600080fd5b50610184610964565b6101e961036936600461171e565b610973565b34801561037a57600080fd5b506101e96103893660046117d4565b610a4f565b34801561039a57600080fd5b506101e96103a9366004611826565b610a5a565b3480156103ba57600080fd5b506101846103c936600461171e565b610a92565b3480156103da57600080fd5b5061015a6103e9366004611902565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561042357600080fd5b506101e96104323660046117b9565b610b2b565b60006001600160e01b0319821663780e9d6360e01b148061045c575061045c82610ba1565b92915050565b60606000805461047190611935565b80601f016020809104026020016040519081016040528092919081815260200182805461049d90611935565b80156104ea5780601f106104bf576101008083540402835291602001916104ea565b820191906000526020600020905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905090565b60006104ff82610bf1565b506000908152600460205260409020546001600160a01b031690565b60006105268261086a565b9050806001600160a01b0316836001600160a01b031614156105995760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105b557506105b581336103e9565b6106275760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610590565b6106318383610c50565b505050565b6106403382610cbe565b61065c5760405162461bcd60e51b815260040161059090611970565b610631838383610d3d565b6000610672836108ca565b82106106d45760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610590565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610705610ee4565b6000610719600a546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610763576040519150601f19603f3d011682016040523d82523d6000602084013e610768565b606091505b50509050806107b95760405162461bcd60e51b815260206004820152601f60248201527f546865417373657473436c75623a207769746864726177206661696c757265006044820152606401610590565b50565b61063183838360405180602001604052806000815250610a5a565b60006107e260085490565b82106108455760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610590565b60088281548110610858576108586119be565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061045c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610590565b60006001600160a01b0382166109345760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610590565b506001600160a01b031660009081526003602052604090205490565b610958610ee4565b6109626000610f3e565b565b60606001805461047190611935565b7f00000000000000000000000000000000000000000000000000000000000000008161099e60085490565b6109a891906119ea565b10610a0c5760405162461bcd60e51b815260206004820152602e60248201527f546865417373657473436c75623a206d696e74696e6720636f756e742065786360448201526d65656473206d6178537570706c7960901b6064820152608401610590565b60005b81811015610a4b57610a2333600b54610f90565b600b8054906000610a3383611a02565b91905055508080610a4390611a02565b915050610a0f565b5050565b610a4b338383610faa565b610a643383610cbe565b610a805760405162461bcd60e51b815260040161059090611970565b610a8c84848484611079565b50505050565b6060610a9d82610bf1565b6000610ad960408051808201909152601f81527f68747470733a2f2f7468656173736574732e636c75622f6170692f6e66742f00602082015290565b90506000815111610af95760405180602001604052806000815250610b24565b80610b03846110ac565b604051602001610b14929190611a1d565b6040516020818303038152906040525b9392505050565b610b33610ee4565b6001600160a01b038116610b985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610590565b6107b981610f3e565b60006001600160e01b031982166380ac58cd60e01b1480610bd257506001600160e01b03198216635b5e139f60e01b145b8061045c57506301ffc9a760e01b6001600160e01b031983161461045c565b6000818152600260205260409020546001600160a01b03166107b95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c858261086a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610cca8361086a565b9050806001600160a01b0316846001600160a01b03161480610d1157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d355750836001600160a01b0316610d2a846104f4565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d508261086a565b6001600160a01b031614610db45760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610590565b6001600160a01b038216610e165760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610590565b610e218383836111aa565b610e2c600082610c50565b6001600160a01b0383166000908152600360205260408120805460019290610e55908490611a4c565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e839084906119ea565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b031633146109625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610590565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a4b828260405180602001604052806000815250611262565b816001600160a01b0316836001600160a01b0316141561100c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610590565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611084848484610d3d565b61109084848484611295565b610a8c5760405162461bcd60e51b815260040161059090611a63565b6060816110d05750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110fa57806110e481611a02565b91506110f39050600a83611acb565b91506110d4565b60008167ffffffffffffffff81111561111557611115611810565b6040519080825280601f01601f19166020018201604052801561113f576020820181803683370190505b5090505b8415610d3557611154600183611a4c565b9150611161600a86611adf565b61116c9060306119ea565b60f81b818381518110611181576111816119be565b60200101906001600160f81b031916908160001a9053506111a3600a86611acb565b9450611143565b6001600160a01b0383166112055761120081600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611228565b816001600160a01b0316836001600160a01b0316146112285761122883826113a2565b6001600160a01b03821661123f576106318161143f565b826001600160a01b0316826001600160a01b0316146106315761063182826114ee565b61126c8383611532565b6112796000848484611295565b6106315760405162461bcd60e51b815260040161059090611a63565b60006001600160a01b0384163b1561139757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112d9903390899088908890600401611af3565b602060405180830381600087803b1580156112f357600080fd5b505af1925050508015611323575060408051601f3d908101601f1916820190925261132091810190611b30565b60015b61137d573d808015611351576040519150601f19603f3d011682016040523d82523d6000602084013e611356565b606091505b5080516113755760405162461bcd60e51b815260040161059090611a63565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d35565b506001949350505050565b600060016113af846108ca565b6113b99190611a4c565b60008381526007602052604090205490915080821461140c576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061145190600190611a4c565b60008381526009602052604081205460088054939450909284908110611479576114796119be565b90600052602060002001549050806008838154811061149a5761149a6119be565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806114d2576114d2611b4d565b6001900381819060005260206000200160009055905550505050565b60006114f9836108ca565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166115885760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610590565b6000818152600260205260409020546001600160a01b0316156115ed5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610590565b6115f9600083836111aa565b6001600160a01b03821660009081526003602052604081208054600192906116229084906119ea565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146107b957600080fd5b6000602082840312156116a857600080fd5b8135610b2481611680565b60005b838110156116ce5781810151838201526020016116b6565b83811115610a8c5750506000910152565b600081518084526116f78160208601602086016116b3565b601f01601f19169290920160200192915050565b602081526000610b2460208301846116df565b60006020828403121561173057600080fd5b5035919050565b80356001600160a01b038116811461174e57600080fd5b919050565b6000806040838503121561176657600080fd5b61176f83611737565b946020939093013593505050565b60008060006060848603121561179257600080fd5b61179b84611737565b92506117a960208501611737565b9150604084013590509250925092565b6000602082840312156117cb57600080fd5b610b2482611737565b600080604083850312156117e757600080fd5b6117f083611737565b91506020830135801515811461180557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561183c57600080fd5b61184585611737565b935061185360208601611737565b925060408501359150606085013567ffffffffffffffff8082111561187757600080fd5b818701915087601f83011261188b57600080fd5b81358181111561189d5761189d611810565b604051601f8201601f19908116603f011681019083821181831017156118c5576118c5611810565b816040528281528a60208487010111156118de57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561191557600080fd5b61191e83611737565b915061192c60208401611737565b90509250929050565b600181811c9082168061194957607f821691505b6020821081141561196a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156119fd576119fd6119d4565b500190565b6000600019821415611a1657611a166119d4565b5060010190565b60008351611a2f8184602088016116b3565b835190830190611a438183602088016116b3565b01949350505050565b600082821015611a5e57611a5e6119d4565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082611ada57611ada611ab5565b500490565b600082611aee57611aee611ab5565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b26908301846116df565b9695505050505050565b600060208284031215611b4257600080fd5b8151610b2481611680565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200bd8a16455c4dc49818e88dab0c0f44e6cee4a1d714ee6565485a7d480a4244e64736f6c63430008090033";

type TheAssetsClubOZConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TheAssetsClubOZConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheAssetsClubOZ__factory extends ContractFactory {
  constructor(...args: TheAssetsClubOZConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TheAssetsClubOZ> {
    return super.deploy(overrides || {}) as Promise<TheAssetsClubOZ>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TheAssetsClubOZ {
    return super.attach(address) as TheAssetsClubOZ;
  }
  override connect(signer: Signer): TheAssetsClubOZ__factory {
    return super.connect(signer) as TheAssetsClubOZ__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheAssetsClubOZInterface {
    return new utils.Interface(_abi) as TheAssetsClubOZInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheAssetsClubOZ {
    return new Contract(address, _abi, signerOrProvider) as TheAssetsClubOZ;
  }
}
